<?xml version="1.0"?>
<mavlink>
  <version>3</version>
  <enums>
    <enum name="MAV_AUTOPILOT">
      <description>Micro air vehicle / autopilot classes. This identifies the individual model.</description>
      <entry value="0" name="MAV_AUTOPILOT_GENERIC">
        <description>Generic autopilot, full support for everything</description>
      </entry>
      <entry value="1" name="MAV_AUTOPILOT_RESERVED">
        <description>Reserved for future use.</description>
      </entry>
      <entry value="2" name="MAV_AUTOPILOT_SLUGS">
        <description>SLUGS autopilot, http://slugsuav.soe.ucsc.edu</description>
      </entry>
      <entry value="3" name="MAV_AUTOPILOT_ARDUPILOTMEGA">
        <description>ArduPilot - Plane/Copter/Rover/Sub/Tracker, https://ardupilot.org</description>
      </entry>
      <entry value="4" name="MAV_AUTOPILOT_OPENPILOT">
        <description>OpenPilot, http://openpilot.org</description>
      </entry>
      <entry value="5" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY">
        <description>Generic autopilot only supporting simple waypoints</description>
      </entry>
      <entry value="6" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY">
        <description>Generic autopilot supporting waypoints and other simple navigation commands</description>
      </entry>
      <entry value="7" name="MAV_AUTOPILOT_GENERIC_MISSION_FULL">
        <description>Generic autopilot supporting the full mission command set</description>
      </entry>
      <entry value="8" name="MAV_AUTOPILOT_INVALID">
        <description>No valid autopilot, e.g. a GCS or other MAVLink component</description>
      </entry>
      <entry value="9" name="MAV_AUTOPILOT_PPZ">
        <description>PPZ UAV - http://nongnu.org/paparazzi</description>
      </entry>
      <entry value="10" name="MAV_AUTOPILOT_UDB">
        <description>UAV Dev Board</description>
      </entry>
      <entry value="11" name="MAV_AUTOPILOT_FP">
        <description>FlexiPilot</description>
      </entry>
      <entry value="12" name="MAV_AUTOPILOT_PX4">
        <description>PX4 Autopilot - http://px4.io/</description>
      </entry>
      <entry value="13" name="MAV_AUTOPILOT_SMACCMPILOT">
        <description>SMACCMPilot - http://smaccmpilot.org</description>
      </entry>
      <entry value="14" name="MAV_AUTOPILOT_AUTOQUAD">
        <description>AutoQuad -- http://autoquad.org</description>
      </entry>
      <entry value="15" name="MAV_AUTOPILOT_ARMAZILA">
        <description>Armazila -- http://armazila.com</description>
      </entry>
      <entry value="16" name="MAV_AUTOPILOT_AEROB">
        <description>Aerob -- http://aerob.ru</description>
      </entry>
      <entry value="17" name="MAV_AUTOPILOT_ASLUAV">
        <description>ASLUAV autopilot -- http://www.asl.ethz.ch</description>
      </entry>
      <entry value="18" name="MAV_AUTOPILOT_SMARTAP">
        <description>SmartAP Autopilot - http://sky-drones.com</description>
      </entry>
      <entry value="19" name="MAV_AUTOPILOT_AIRRAILS">
        <description>AirRails - http://uaventure.com</description>
      </entry>
      <entry value="20" name="MAV_AUTOPILOT_REFLEX">
        <description>Fusion Reflex - https://fusion.engineering</description>
      </entry>
    </enum>
    <enum name="MAV_TYPE">
      <description>MAVLINK component type reported in HEARTBEAT message. Flight controllers must report the type of the vehicle on which they are mounted (e.g. MAV_TYPE_OCTOROTOR). All other components must report a value appropriate for their type (e.g. a camera must use MAV_TYPE_CAMERA).</description>
      <entry value="0" name="MAV_TYPE_GENERIC">
        <description>Generic micro air vehicle</description>
      </entry>
      <entry value="1" name="MAV_TYPE_FIXED_WING">
        <description>Fixed wing aircraft.</description>
      </entry>
      <entry value="2" name="MAV_TYPE_QUADROTOR">
        <description>Quadrotor</description>
      </entry>
      <entry value="3" name="MAV_TYPE_COAXIAL">
        <description>Coaxial helicopter</description>
      </entry>
      <entry value="4" name="MAV_TYPE_HELICOPTER">
        <description>Normal helicopter with tail rotor.</description>
      </entry>
      <entry value="5" name="MAV_TYPE_ANTENNA_TRACKER">
        <description>Ground installation</description>
      </entry>
      <entry value="6" name="MAV_TYPE_GCS">
        <description>Operator control unit / ground control station</description>
      </entry>
      <entry value="7" name="MAV_TYPE_AIRSHIP">
        <description>Airship, controlled</description>
      </entry>
      <entry value="8" name="MAV_TYPE_FREE_BALLOON">
        <description>Free balloon, uncontrolled</description>
      </entry>
      <entry value="9" name="MAV_TYPE_ROCKET">
        <description>Rocket</description>
      </entry>
      <entry value="10" name="MAV_TYPE_GROUND_ROVER">
        <description>Ground rover</description>
      </entry>
      <entry value="11" name="MAV_TYPE_SURFACE_BOAT">
        <description>Surface vessel, boat, ship</description>
      </entry>
      <entry value="12" name="MAV_TYPE_SUBMARINE">
        <description>Submarine</description>
      </entry>
      <entry value="13" name="MAV_TYPE_HEXAROTOR">
        <description>Hexarotor</description>
      </entry>
      <entry value="14" name="MAV_TYPE_OCTOROTOR">
        <description>Octorotor</description>
      </entry>
      <entry value="15" name="MAV_TYPE_TRICOPTER">
        <description>Tricopter</description>
      </entry>
      <entry value="16" name="MAV_TYPE_FLAPPING_WING">
        <description>Flapping wing</description>
      </entry>
      <entry value="17" name="MAV_TYPE_KITE">
        <description>Kite</description>
      </entry>
      <entry value="18" name="MAV_TYPE_ONBOARD_CONTROLLER">
        <description>Onboard companion controller</description>
      </entry>
      <entry value="19" name="MAV_TYPE_VTOL_TAILSITTER_DUOROTOR">
        <description>Two-rotor Tailsitter VTOL that additionally uses control surfaces in vertical operation. Note, value previously named MAV_TYPE_VTOL_DUOROTOR.</description>
      </entry>
      <entry value="20" name="MAV_TYPE_VTOL_TAILSITTER_QUADROTOR">
        <description>Quad-rotor Tailsitter VTOL using a V-shaped quad config in vertical operation. Note: value previously named MAV_TYPE_VTOL_QUADROTOR.</description>
      </entry>
      <entry value="21" name="MAV_TYPE_VTOL_TILTROTOR">
        <description>Tiltrotor VTOL. Fuselage and wings stay (nominally) horizontal in all flight phases. It able to tilt (some) rotors to provide thrust in cruise flight.</description>
      </entry>
      <entry value="22" name="MAV_TYPE_VTOL_FIXEDROTOR">
        <description>VTOL with separate fixed rotors for hover and cruise flight. Fuselage and wings stay (nominally) horizontal in all flight phases.</description>
      </entry>
      <entry value="23" name="MAV_TYPE_VTOL_TAILSITTER">
        <description>Tailsitter VTOL. Fuselage and wings orientation changes depending on flight phase: vertical for hover, horizontal for cruise. Use more specific VTOL MAV_TYPE_VTOL_DUOROTOR or MAV_TYPE_VTOL_QUADROTOR if appropriate.</description>
      </entry>
      <entry value="24" name="MAV_TYPE_VTOL_TILTWING">
        <description>Tiltwing VTOL. Fuselage stays horizontal in all flight phases. The whole wing, along with any attached engine, can tilt between vertical and horizontal mode.</description>
      </entry>
      <!-- Entry 25 reserved for other VTOL airframe -->
      <entry value="25" name="MAV_TYPE_VTOL_RESERVED5">
        <description>VTOL reserved 5</description>
      </entry>
      <entry value="26" name="MAV_TYPE_GIMBAL">
        <description>Gimbal</description>
      </entry>
      <entry value="27" name="MAV_TYPE_ADSB">
        <description>ADSB system</description>
      </entry>
      <entry value="28" name="MAV_TYPE_PARAFOIL">
        <description>Steerable, nonrigid airfoil</description>
      </entry>
      <entry value="29" name="MAV_TYPE_DODECAROTOR">
        <description>Dodecarotor</description>
      </entry>
      <entry value="30" name="MAV_TYPE_CAMERA">
        <description>Camera</description>
      </entry>
      <entry value="31" name="MAV_TYPE_CHARGING_STATION">
        <description>Charging station</description>
      </entry>
      <entry value="32" name="MAV_TYPE_FLARM">
        <description>FLARM collision avoidance system</description>
      </entry>
      <entry value="33" name="MAV_TYPE_SERVO">
        <description>Servo</description>
      </entry>
      <entry value="34" name="MAV_TYPE_ODID">
        <description>Open Drone ID. See https://mavlink.io/en/services/opendroneid.html.</description>
      </entry>
      <entry value="35" name="MAV_TYPE_DECAROTOR">
        <description>Decarotor</description>
      </entry>
      <entry value="36" name="MAV_TYPE_BATTERY">
        <description>Battery</description>
      </entry>
      <entry value="37" name="MAV_TYPE_PARACHUTE">
        <description>Parachute</description>
      </entry>
      <entry value="38" name="MAV_TYPE_LOG">
        <description>Log</description>
      </entry>
      <entry value="39" name="MAV_TYPE_OSD">
        <description>OSD</description>
      </entry>
      <entry value="40" name="MAV_TYPE_IMU">
        <description>IMU</description>
      </entry>
      <entry value="41" name="MAV_TYPE_GPS">
        <description>GPS</description>
      </entry>
      <entry value="42" name="MAV_TYPE_WINCH">
        <description>Winch</description>
      </entry>
    </enum>
    <enum name="MAV_MODE_FLAG" bitmask="true">
      <description>These flags encode the MAV mode.</description>
      <entry value="128" name="MAV_MODE_FLAG_SAFETY_ARMED">
        <description>0b10000000 MAV safety set to armed. Motors are enabled / running / can start. Ready to fly. Additional note: this flag is to be ignore when sent in the command MAV_CMD_DO_SET_MODE and MAV_CMD_COMPONENT_ARM_DISARM shall be used instead. The flag can still be used to report the armed state.</description>
      </entry>
      <entry value="64" name="MAV_MODE_FLAG_MANUAL_INPUT_ENABLED">
        <description>0b01000000 remote control input is enabled.</description>
      </entry>
      <entry value="32" name="MAV_MODE_FLAG_HIL_ENABLED">
        <description>0b00100000 hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.</description>
      </entry>
      <entry value="16" name="MAV_MODE_FLAG_STABILIZE_ENABLED">
        <description>0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.</description>
      </entry>
      <entry value="8" name="MAV_MODE_FLAG_GUIDED_ENABLED">
        <description>0b00001000 guided mode enabled, system flies waypoints / mission items.</description>
      </entry>
      <entry value="4" name="MAV_MODE_FLAG_AUTO_ENABLED">
        <description>0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.</description>
      </entry>
      <entry value="2" name="MAV_MODE_FLAG_TEST_ENABLED">
        <description>0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.</description>
      </entry>
      <entry value="1" name="MAV_MODE_FLAG_CUSTOM_MODE_ENABLED">
        <description>0b00000001 Reserved for future use.</description>
      </entry>
    </enum>
    <enum name="MAV_MODE_FLAG_DECODE_POSITION" bitmask="true">
      <description>These values encode the bit positions of the decode position. These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value. The result will be either 0 or 1, depending on if the flag is set or not.</description>
      <entry value="128" name="MAV_MODE_FLAG_DECODE_POSITION_SAFETY">
        <description>First bit:  10000000</description>
      </entry>
      <entry value="64" name="MAV_MODE_FLAG_DECODE_POSITION_MANUAL">
        <description>Second bit: 01000000</description>
      </entry>
      <entry value="32" name="MAV_MODE_FLAG_DECODE_POSITION_HIL">
        <description>Third bit:  00100000</description>
      </entry>
      <entry value="16" name="MAV_MODE_FLAG_DECODE_POSITION_STABILIZE">
        <description>Fourth bit: 00010000</description>
      </entry>
      <entry value="8" name="MAV_MODE_FLAG_DECODE_POSITION_GUIDED">
        <description>Fifth bit:  00001000</description>
      </entry>
      <entry value="4" name="MAV_MODE_FLAG_DECODE_POSITION_AUTO">
        <description>Sixth bit:   00000100</description>
      </entry>
      <entry value="2" name="MAV_MODE_FLAG_DECODE_POSITION_TEST">
        <description>Seventh bit: 00000010</description>
      </entry>
      <entry value="1" name="MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE">
        <description>Eighth bit: 00000001</description>
      </entry>
    </enum>
    <enum name="MAV_STATE">
      <entry value="0" name="MAV_STATE_UNINIT">
        <description>Uninitialized system, state is unknown.</description>
      </entry>
      <entry value="1" name="MAV_STATE_BOOT">
        <description>System is booting up.</description>
      </entry>
      <entry value="2" name="MAV_STATE_CALIBRATING">
        <description>System is calibrating and not flight-ready.</description>
      </entry>
      <entry value="3" name="MAV_STATE_STANDBY">
        <description>System is grounded and on standby. It can be launched any time.</description>
      </entry>
      <entry value="4" name="MAV_STATE_ACTIVE">
        <description>System is active and might be already airborne. Motors are engaged.</description>
      </entry>
      <entry value="5" name="MAV_STATE_CRITICAL">
        <description>System is in a non-normal flight mode. It can however still navigate.</description>
      </entry>
      <entry value="6" name="MAV_STATE_EMERGENCY">
        <description>System is in a non-normal flight mode. It lost control over parts or over the whole airframe. It is in mayday and going down.</description>
      </entry>
      <entry value="7" name="MAV_STATE_POWEROFF">
        <description>System just initialized its power-down sequence, will shut down now.</description>
      </entry>
      <entry value="8" name="MAV_STATE_FLIGHT_TERMINATION">
        <description>System is terminating itself.</description>
      </entry>
    </enum>
    <enum name="MAV_COMPONENT">
      <description>Component ids (values) for the different types and instances of onboard hardware/software that might make up a MAVLink system (autopilot, cameras, servos, GPS systems, avoidance systems etc.).
      Components must use the appropriate ID in their source address when sending messages. Components can also use IDs to determine if they are the intended recipient of an incoming message. The MAV_COMP_ID_ALL value is used to indicate messages that must be processed by all components.
      When creating new entries, components that can have multiple instances (e.g. cameras, servos etc.) should be allocated sequential values. An appropriate number of values should be left free after these components to allow the number of instances to be expanded.</description>
      <entry value="0" name="MAV_COMP_ID_ALL">
        <description>Target id (target_component) used to broadcast messages to all components of the receiving system. Components should attempt to process messages with this component ID and forward to components on any other interfaces. Note: This is not a valid *source* component id for a message.</description>
      </entry>
      <entry value="1" name="MAV_COMP_ID_AUTOPILOT1">
        <description>System flight controller component ("autopilot"). Only one autopilot is expected in a particular system.</description>
      </entry>
      <!-- Component ids from 25-99 are reserved for private OEM component definitions (and may be incompatible with other private components). Note that if this range is later reduced, higher ids will be reallocated first. -->
      <entry value="25" name="MAV_COMP_ID_LORA_RADIO">
        <description>SEMTECH SX1276 LoRa Radio</description>
      </entry>
      <entry value="26" name="MAV_COMP_ID_GPS_MODULE">
        <description>NEO-6M GPS module.</description>
      </entry>
      <entry value="27" name="MAV_COMP_ID_INSTRUMENTATION">
        <description>Instrumentation board.</description>
      </entry>
      <entry value="28" name="MAV_COMP_ID_DAC">
        <description>Digital to analog converter + operational amplifier.</description>
      </entry>
      <entry value="29" name="MAV_COMP_ID_BMS">
        <description>Battery management system.</description>
      </entry>
      <entry value="30" name="MAV_COMP_ID_DALLAS">
        <description>DS18B20 temperature probes.</description>
      </entry>
      <entry value="31" name="MAV_COMP_ID_USER7">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="32" name="MAV_COMP_ID_USER8">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="33" name="MAV_COMP_ID_USER9">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="34" name="MAV_COMP_ID_USER10">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="35" name="MAV_COMP_ID_USER11">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="36" name="MAV_COMP_ID_USER12">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="37" name="MAV_COMP_ID_USER13">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="38" name="MAV_COMP_ID_USER14">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="39" name="MAV_COMP_ID_USER15">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="40" name="MAV_COMP_ID_USER16">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="41" name="MAV_COMP_ID_USER17">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="42" name="MAV_COMP_ID_USER18">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="43" name="MAV_COMP_ID_USER19">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="44" name="MAV_COMP_ID_USER20">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="45" name="MAV_COMP_ID_USER21">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="46" name="MAV_COMP_ID_USER22">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="47" name="MAV_COMP_ID_USER23">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="48" name="MAV_COMP_ID_USER24">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="49" name="MAV_COMP_ID_USER25">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="50" name="MAV_COMP_ID_USER26">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="51" name="MAV_COMP_ID_USER27">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="52" name="MAV_COMP_ID_USER28">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="53" name="MAV_COMP_ID_USER29">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="54" name="MAV_COMP_ID_USER30">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="55" name="MAV_COMP_ID_USER31">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="56" name="MAV_COMP_ID_USER32">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="57" name="MAV_COMP_ID_USER33">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="58" name="MAV_COMP_ID_USER34">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="59" name="MAV_COMP_ID_USER35">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="60" name="MAV_COMP_ID_USER36">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="61" name="MAV_COMP_ID_USER37">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="62" name="MAV_COMP_ID_USER38">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="63" name="MAV_COMP_ID_USER39">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="64" name="MAV_COMP_ID_USER40">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="65" name="MAV_COMP_ID_USER41">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="66" name="MAV_COMP_ID_USER42">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="67" name="MAV_COMP_ID_USER43">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="68" name="MAV_COMP_ID_TELEMETRY_RADIO">
        <description>Telemetry radio (e.g. SiK radio, or other component that emits RADIO_STATUS messages).</description>
      </entry>
      <entry value="69" name="MAV_COMP_ID_USER45">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="70" name="MAV_COMP_ID_USER46">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="71" name="MAV_COMP_ID_USER47">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="72" name="MAV_COMP_ID_USER48">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="73" name="MAV_COMP_ID_USER49">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="74" name="MAV_COMP_ID_USER50">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="75" name="MAV_COMP_ID_USER51">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="76" name="MAV_COMP_ID_USER52">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="77" name="MAV_COMP_ID_USER53">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="78" name="MAV_COMP_ID_USER54">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="79" name="MAV_COMP_ID_USER55">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="80" name="MAV_COMP_ID_USER56">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="81" name="MAV_COMP_ID_USER57">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="82" name="MAV_COMP_ID_USER58">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="83" name="MAV_COMP_ID_USER59">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="84" name="MAV_COMP_ID_USER60">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="85" name="MAV_COMP_ID_USER61">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="86" name="MAV_COMP_ID_USER62">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="87" name="MAV_COMP_ID_USER63">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="88" name="MAV_COMP_ID_USER64">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="89" name="MAV_COMP_ID_USER65">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="90" name="MAV_COMP_ID_USER66">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="91" name="MAV_COMP_ID_USER67">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="92" name="MAV_COMP_ID_USER68">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="93" name="MAV_COMP_ID_USER69">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="94" name="MAV_COMP_ID_USER70">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="95" name="MAV_COMP_ID_USER71">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="96" name="MAV_COMP_ID_USER72">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="97" name="MAV_COMP_ID_USER73">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="98" name="MAV_COMP_ID_USER74">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="99" name="MAV_COMP_ID_USER75">
        <description>Id for a component on privately managed MAVLink network. Can be used for any purpose but may not be published by components outside of the private network.</description>
      </entry>
      <entry value="100" name="MAV_COMP_ID_CAMERA">
        <description>Camera #1.</description>
      </entry>
      <entry value="101" name="MAV_COMP_ID_CAMERA2">
        <description>Camera #2.</description>
      </entry>
      <entry value="102" name="MAV_COMP_ID_CAMERA3">
        <description>Camera #3.</description>
      </entry>
      <entry value="103" name="MAV_COMP_ID_CAMERA4">
        <description>Camera #4.</description>
      </entry>
      <entry value="104" name="MAV_COMP_ID_CAMERA5">
        <description>Camera #5.</description>
      </entry>
      <entry value="105" name="MAV_COMP_ID_CAMERA6">
        <description>Camera #6.</description>
      </entry>
      <entry value="140" name="MAV_COMP_ID_SERVO1">
        <description>Servo #1.</description>
      </entry>
      <entry value="141" name="MAV_COMP_ID_SERVO2">
        <description>Servo #2.</description>
      </entry>
      <entry value="142" name="MAV_COMP_ID_SERVO3">
        <description>Servo #3.</description>
      </entry>
      <entry value="143" name="MAV_COMP_ID_SERVO4">
        <description>Servo #4.</description>
      </entry>
      <entry value="144" name="MAV_COMP_ID_SERVO5">
        <description>Servo #5.</description>
      </entry>
      <entry value="145" name="MAV_COMP_ID_SERVO6">
        <description>Servo #6.</description>
      </entry>
      <entry value="146" name="MAV_COMP_ID_SERVO7">
        <description>Servo #7.</description>
      </entry>
      <entry value="147" name="MAV_COMP_ID_SERVO8">
        <description>Servo #8.</description>
      </entry>
      <entry value="148" name="MAV_COMP_ID_SERVO9">
        <description>Servo #9.</description>
      </entry>
      <entry value="149" name="MAV_COMP_ID_SERVO10">
        <description>Servo #10.</description>
      </entry>
      <entry value="150" name="MAV_COMP_ID_SERVO11">
        <description>Servo #11.</description>
      </entry>
      <entry value="151" name="MAV_COMP_ID_SERVO12">
        <description>Servo #12.</description>
      </entry>
      <entry value="152" name="MAV_COMP_ID_SERVO13">
        <description>Servo #13.</description>
      </entry>
      <entry value="153" name="MAV_COMP_ID_SERVO14">
        <description>Servo #14.</description>
      </entry>
      <entry value="154" name="MAV_COMP_ID_GIMBAL">
        <description>Gimbal #1.</description>
      </entry>
      <entry value="155" name="MAV_COMP_ID_LOG">
        <description>Logging component.</description>
      </entry>
      <entry value="156" name="MAV_COMP_ID_ADSB">
        <description>Automatic Dependent Surveillance-Broadcast (ADS-B) component.</description>
      </entry>
      <entry value="157" name="MAV_COMP_ID_OSD">
        <description>On Screen Display (OSD) devices for video links.</description>
      </entry>
      <entry value="158" name="MAV_COMP_ID_PERIPHERAL">
        <description>Generic autopilot peripheral component ID. Meant for devices that do not implement the parameter microservice.</description>
      </entry>
      <entry value="159" name="MAV_COMP_ID_QX1_GIMBAL">
        <deprecated since="2018-11" replaced_by="MAV_COMP_ID_GIMBAL">All gimbals should use MAV_COMP_ID_GIMBAL.</deprecated>
        <description>Gimbal ID for QX1.</description>
      </entry>
      <entry value="160" name="MAV_COMP_ID_FLARM">
        <description>FLARM collision alert component.</description>
      </entry>
      <entry value="161" name="MAV_COMP_ID_PARACHUTE">
        <description>Parachute component.</description>
      </entry>
      <entry value="169" name="MAV_COMP_ID_WINCH">
        <description>Winch component.</description>
      </entry>
      <entry value="171" name="MAV_COMP_ID_GIMBAL2">
        <description>Gimbal #2.</description>
      </entry>
      <entry value="172" name="MAV_COMP_ID_GIMBAL3">
        <description>Gimbal #3.</description>
      </entry>
      <entry value="173" name="MAV_COMP_ID_GIMBAL4">
        <description>Gimbal #4</description>
      </entry>
      <entry value="174" name="MAV_COMP_ID_GIMBAL5">
        <description>Gimbal #5.</description>
      </entry>
      <entry value="175" name="MAV_COMP_ID_GIMBAL6">
        <description>Gimbal #6.</description>
      </entry>
      <entry value="180" name="MAV_COMP_ID_BATTERY">
        <description>Battery #1.</description>
      </entry>
      <entry value="181" name="MAV_COMP_ID_BATTERY2">
        <description>Battery #2.</description>
      </entry>
      <entry value="189" name="MAV_COMP_ID_MAVCAN">
        <description>CAN over MAVLink client.</description>
      </entry>
      <entry value="190" name="MAV_COMP_ID_MISSIONPLANNER">
        <description>Component that can generate/supply a mission flight plan (e.g. GCS or developer API).</description>
      </entry>
      <entry value="191" name="MAV_COMP_ID_ONBOARD_COMPUTER">
        <description>Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.</description>
      </entry>
      <entry value="192" name="MAV_COMP_ID_ONBOARD_COMPUTER2">
        <description>Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.</description>
      </entry>
      <entry value="193" name="MAV_COMP_ID_ONBOARD_COMPUTER3">
        <description>Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.</description>
      </entry>
      <entry value="194" name="MAV_COMP_ID_ONBOARD_COMPUTER4">
        <description>Component that lives on the onboard computer (companion computer) and has some generic functionalities, such as settings system parameters and monitoring the status of some processes that don't directly speak mavlink and so on.</description>
      </entry>
      <entry value="195" name="MAV_COMP_ID_PATHPLANNER">
        <description>Component that finds an optimal path between points based on a certain constraint (e.g. minimum snap, shortest path, cost, etc.).</description>
      </entry>
      <entry value="196" name="MAV_COMP_ID_OBSTACLE_AVOIDANCE">
        <description>Component that plans a collision free path between two points.</description>
      </entry>
      <entry value="197" name="MAV_COMP_ID_VISUAL_INERTIAL_ODOMETRY">
        <description>Component that provides position estimates using VIO techniques.</description>
      </entry>
      <entry value="198" name="MAV_COMP_ID_PAIRING_MANAGER">
        <description>Component that manages pairing of vehicle and GCS.</description>
      </entry>
      <entry value="200" name="MAV_COMP_ID_IMU">
        <description>Inertial Measurement Unit (IMU) #1.</description>
      </entry>
      <entry value="201" name="MAV_COMP_ID_IMU_2">
        <description>Inertial Measurement Unit (IMU) #2.</description>
      </entry>
      <entry value="202" name="MAV_COMP_ID_IMU_3">
        <description>Inertial Measurement Unit (IMU) #3.</description>
      </entry>
      <entry value="220" name="MAV_COMP_ID_GPS">
        <description>GPS #1.</description>
      </entry>
      <entry value="221" name="MAV_COMP_ID_GPS2">
        <description>GPS #2.</description>
      </entry>
      <entry value="236" name="MAV_COMP_ID_ODID_TXRX_1">
        <description>Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).</description>
      </entry>
      <entry value="237" name="MAV_COMP_ID_ODID_TXRX_2">
        <description>Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).</description>
      </entry>
      <entry value="238" name="MAV_COMP_ID_ODID_TXRX_3">
        <description>Open Drone ID transmitter/receiver (Bluetooth/WiFi/Internet).</description>
      </entry>
      <entry value="240" name="MAV_COMP_ID_UDP_BRIDGE">
        <description>Component to bridge MAVLink to UDP (i.e. from a UART).</description>
      </entry>
      <entry value="241" name="MAV_COMP_ID_UART_BRIDGE">
        <description>Component to bridge to UART (i.e. from UDP).</description>
      </entry>
      <entry value="242" name="MAV_COMP_ID_TUNNEL_NODE">
        <description>Component handling TUNNEL messages (e.g. vendor specific GUI of a component).</description>
      </entry>
      <entry value="250" name="MAV_COMP_ID_SYSTEM_CONTROL">
        <deprecated since="2018-11" replaced_by="MAV_COMP_ID_ALL">System control does not require a separate component ID. Instead, system commands should be sent with target_component=MAV_COMP_ID_ALL allowing the target component to use any appropriate component id.</deprecated>
        <description>Deprecated, don't use. Component for handling system messages (e.g. to ARM, takeoff, etc.).</description>
      </entry>
    </enum>

    <enum name="MPPT_BATTERY_STATUS" type="uint8_t">
      <description>Represents the status of the battery. Derived from input register 3200.</description>
      <entry value="0" name="MPPT_STATUS_NORMAL">
        <description>All monitored parameters are normal. For battery (ID=3200): Voltage Normal (D3-D0=00H), Temp Normal (D7-D4=00H), Internal Resistance Normal (D8=0), Rated Voltage ID Normal (D15=0).</description>
      </entry>
      <entry value="1" name="MPPT_STATUS_OVERVOLTAGE">
        <description>Battery overvoltage detected (e.g., ID=3200, D3-D0 = 01H).</description>
      </entry>
      <entry value="2" name="MPPT_STATUS_UNDERVOLTAGE">
        <description>Battery undervoltage detected (e.g., ID=3200, D3-D0 = 02H).</description>
      </entry>
      <entry value="3" name="MPPT_STATUS_VOLTAGE_LOW_VOLT_DISCONNECT">
        <description>Battery low voltage disconnect activated (e.g., ID=3200, D3-D0 = 03H).</description>
      </entry>
      <entry value="4" name="MPPT_STATUS_VOLTAGE_FAULT">
        <description>A general battery voltage fault detected (e.g., ID=3200, D3-D0 = 04H).</description>
      </entry>
      <entry value="5" name="MPPT_STATUS_TEMP_OVER">
        <description>Over temperature detected (e.g., ID=3200, D7-D4 = 01H).</description>
      </entry>
      <entry value="6" name="MPPT_STATUS_TEMP_LOW">
        <description>Low temperature detected (e.g., ID=3200, D7-D4 = 02H).</description>
      </entry>
      <entry value="7" name="MPPT_STATUS_INTERNAL_RESISTANCE_ABNORMAL">
        <description>Battery internal resistance is abnormal (e.g., ID=3200, D8 = 1).</description>
      </entry>
      <entry value="8" name="MPPT_STATUS_RATED_VOLTAGE_ID_WRONG">
        <description>Wrong identification for rated voltage (e.g., ID=3200, D15 = 1).</description>
      </entry>
      <entry value="255" name="MPPT_STATUS_UNKNOWN">
        <description>The status is unknown or not yet determined.</description>
      </entry>
    </enum>

    <enum name="MPPT_CHARGING_EQUIPMENT_STATUS" type="uint8_t">
      <description>Represents the primary status of the charging equipment. Derived by interpreting bits in input register 3201. The reported status may depend on the priority logic implemented in the monitoring software if multiple conditions are present.</description>

      <entry value="0" name="MPPT_CHARGING_STATUS_RUNNING_STANDBY">
        <description>Equipment is running mode, else standby (register 3201: D0=1 = running). Typically implies no active charging and no faults.</description>
      </entry>
      <entry value="1" name="MPPT_CHARGING_STATUS_NORMAL_FAULT">
        <description>Equipment has detected a fault (D1=1=Fault)</description>
      </entry>
      <entry value="1" name="MPPT_CHARGING_STATUS_NO_CHARGING">
        <description>Equipment is running but not actively charging (register 3201: D0=1, D1=0 (No Fault), D3-D2=00H (No Charging), and D15-D14=00H (Input Volt Normal)).</description>
      </entry>
      <entry value="2" name="MPPT_CHARGING_STATUS_FLOAT">
        <description>Equipment is in float charging mode (register 3201: D0=1, D1=0 (No Fault), D3-D2=01H (Float), and D15-D14=00H (Input Volt Normal)).</description>
      </entry>
      <entry value="3" name="MPPT_CHARGING_STATUS_BOOST">
        <description>Equipment is in boost charging mode (register 3201: D0=1, D1=0 (No Fault), D3-D2=02H (Boost), and D15-D14=00H (Input Volt Normal)).</description>
      </entry>
      <entry value="4" name="MPPT_CHARGING_STATUS_EQUALIZATION">
        <description>Equipment is in equalization charging mode (register 3201: D0=1, D1=0 (No Fault), D3-D2=03H (Equalization), and D15-D14=00H (Input Volt Normal)).</description>
      </entry>
      <entry value="5" name="MPPT_CHARGING_INPUT_VOLTAGE_NONE">
        <description>No power connected to input (register 3201: D15-D14=01H). Equipment may be off or in a pre-start state.</description>
      </entry>
      <entry value="6" name="MPPT_CHARGING_INPUT_VOLTAGE_HIGH">
        <description>Input voltage is too high (register 3201: D15-D14=02H). This may lead to a fault condition (D1=1).</description>
      </entry>
      <entry value="7" name="MPPT_CHARGING_INPUT_VOLTAGE_ERROR">
        <description>General input voltage error detected (register 3201: D15-D14=03H). This may lead to a fault condition (D1=1).</description>
      </entry>
      <entry value="8" name="MPPT_CHARGING_FAULT_PV_SHORT">
        <description>PV input short circuit detected (register 3201: D4=1. Typically, D1=1 will also be set).</description>
      </entry>
      <entry value="9" name="MPPT_CHARGING_FAULT_LOAD_SIDE">
        <description>Fault on the load side, such as load over current (D9=1), load short circuit (D8=1), or load MOSFET short (D7=1) (register 3201. Typically, D1=1 will also be set).</description>
      </entry>
      <entry value="10" name="MPPT_CHARGING_FAULT_INPUT_OVERCURRENT">
        <description>Input over current detected (register 3201: D10=1. Typically, D1=1 will also be set).</description>
      </entry>
      <entry value="11" name="MPPT_CHARGING_FAULT_MOSFET_SHORT">
        <description>Internal MOSFET short circuit detected (Charging MOSFET D13=1, Charging or Anti-reverse MOSFET D12=1, or Anti-reverse MOSFET D11=1) (register 3201. Typically, D1=1 will also be set).</description>
      </entry>
      <entry value="12" name="MPPT_CHARGING_FAULT_SYSTEM">
        <description>A general system fault is active (register 3201: D1=1), not covered by other more specific fault entries in this enum.</description>
      </entry>
      <entry value="255" name="MPPT_CHARGING_STATUS_UNKNOWN">
        <description>The charging equipment status is unknown or not yet determined.</description>
      </entry>
    </enum>

    <enum name="BMS_CHARGE_DISCHARGE_STATUS_FLAGS" bitmask="true">
      <description>
        Flags to describe the charge/discharge status of a battery system, designed to be packed into a single byte.
        The status is composed of three parts:
        1. Operational State (2 bits, bits 0-1): Indicates if the system is stationary, charging, or discharging.
           - 0 (00b): Stationary
           - 1 (01b): Charging
           - 2 (10b): Discharging
           - 3 (11b): Reserved for future use.
        2. Charge MOSFET State (1 bit, bit 2): Indicates if the charge MOSFET is ON (1) or OFF (0).
        3. Discharge MOSFET State (1 bit, bit 3): Indicates if the discharge MOSFET is ON (1) or OFF (0).

        The enum entries provide values that can be ORed together to form the complete status byte.
        For example, to represent 'Charging' with 'Charge MOS ON' and 'Discharge MOS OFF':
        (CHARGE_DISCHARGE_STATE_CHARGING | CHARGE_DISCHARGE_CHARGE_MOS_ON)
        This would result in a value of (1 | 4) = 5.

        To decode:
        - state = value & 0x03;
        - charge_mos_on = (value & CHARGE_DISCHARGE_CHARGE_MOS_ON) != 0
        - discharge_mos_on = (value & CHARGE_DISCHARGE_DISCHARGE_MOS_ON) != 0
      </description>

      <entry value="0" name="CHARGE_DISCHARGE_STATE_STATIONARY">
        <description>Operational state is Stationary (neither charging nor discharging). This value (00b) occupies bits 0-1.</description>
      </entry>
      <entry value="1" name="CHARGE_DISCHARGE_STATE_CHARGING">
        <description>Operational state is Charging. This value (01b) occupies bits 0-1.</description>
      </entry>
      <entry value="2" name="CHARGE_DISCHARGE_STATE_DISCHARGING">
        <description>Operational state is Discharging. This value (10b) occupies bits 0-1.</description>
      </entry>
      <entry value="4" name="CHARGE_DISCHARGE_CHARGE_MOS_ON"> <description>Charge MOSFET is ON. This flag occupies bit 2. If this flag is not set, Charge MOS is OFF.</description>
      </entry>
      <entry value="8" name="CHARGE_DISCHARGE_DISCHARGE_MOS_ON"> <description>Discharge MOSFET is ON. This flag occupies bit 3. If this flag is not set, Discharge MOS is OFF.</description>
      </entry>
    </enum>


  <!-- 
    This file defines MAVLink enums for the Daly BMS "Battery failure status" message (Data ID 0x98).
    The failure status is spread across multiple bytes, where each bit indicates a specific fault.
    Each byte of flags gets its own MAVLink enum with bitmask="true".
    Byte 7 of the original message is a "Fault code" and should be handled as a separate
    uint8_t field in the MAVLink message, not as part of these bitmask enums.
  -->
    <enum name="DALY_FAILURE_BYTE0_VOLTAGE_FLAGS" bitmask="true">
      <description>Flags for Byte 0 of the Daly BMS failure status: Voltage-related failures.</description>
      <entry value="1" name="DALY_FAILURE_CELL_VOLT_HIGH_LVL1">
        <description>Cell voltage high level 1 alarm.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_CELL_VOLT_HIGH_LVL2">
        <description>Cell voltage high level 2 alarm.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_CELL_VOLT_LOW_LVL1">
        <description>Cell voltage low level 1 alarm.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_CELL_VOLT_LOW_LVL2">
        <description>Cell voltage low level 2 alarm.</description>
      </entry>
      <entry value="16" name="DALY_FAILURE_SUM_VOLT_HIGH_LVL1">
        <description>Sum voltage high level 1 alarm.</description>
      </entry>
      <entry value="32" name="DALY_FAILURE_SUM_VOLT_HIGH_LVL2">
        <description>Sum voltage high level 2 alarm.</description>
      </entry>
      <entry value="64" name="DALY_FAILURE_SUM_VOLT_LOW_LVL1">
        <description>Sum voltage low level 1 alarm.</description>
      </entry>
      <entry value="128" name="DALY_FAILURE_SUM_VOLT_LOW_LVL2">
        <description>Sum voltage low level 2 alarm.</description>
      </entry>
    </enum>

    <enum name="DALY_FAILURE_BYTE1_TEMP_FLAGS" bitmask="true">
      <description>Flags for Byte 1 of the Daly BMS failure status: Temperature-related failures.</description>
      <entry value="1" name="DALY_FAILURE_CHG_TEMP_HIGH_LVL1">
        <description>Charge temperature high level 1 alarm.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_CHG_TEMP_HIGH_LVL2">
        <description>Charge temperature high level 2 alarm.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_CHG_TEMP_LOW_LVL1">
        <description>Charge temperature low level 1 alarm.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_CHG_TEMP_LOW_LVL2">
        <description>Charge temperature low level 2 alarm.</description>
      </entry>
      <entry value="16" name="DALY_FAILURE_DISCHG_TEMP_HIGH_LVL1">
        <description>Discharge temperature high level 1 alarm.</description>
      </entry>
      <entry value="32" name="DALY_FAILURE_DISCHG_TEMP_HIGH_LVL2">
        <description>Discharge temperature high level 2 alarm.</description>
      </entry>
      <entry value="64" name="DALY_FAILURE_DISCHG_TEMP_LOW_LVL1">
        <description>Discharge temperature low level 1 alarm.</description>
      </entry>
      <entry value="128" name="DALY_FAILURE_DISCHG_TEMP_LOW_LVL2">
        <description>Discharge temperature low level 2 alarm.</description>
      </entry>
    </enum>

    <enum name="DALY_FAILURE_BYTE2_CURRENT_SOC_FLAGS" bitmask="true">
      <description>Flags for Byte 2 of the Daly BMS failure status: Current and SOC related failures.</description>
      <entry value="1" name="DALY_FAILURE_CHG_OVERCURRENT_LVL1">
        <description>Charge overcurrent level 1 alarm.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_CHG_OVERCURRENT_LVL2">
        <description>Charge overcurrent level 2 alarm.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_DISCHG_OVERCURRENT_LVL1">
        <description>Discharge overcurrent level 1 alarm.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_DISCHG_OVERCURRENT_LVL2">
        <description>Discharge overcurrent level 2 alarm.</description>
      </entry>
      <entry value="16" name="DALY_FAILURE_SOC_HIGH_LVL1">
        <description>SOC high level 1 alarm.</description>
      </entry>
      <entry value="32" name="DALY_FAILURE_SOC_HIGH_LVL2">
        <description>SOC high level 2 alarm.</description>
      </entry>
      <entry value="64" name="DALY_FAILURE_SOC_LOW_LVL1">
        <description>SOC low level 1 alarm.</description>
      </entry>
      <entry value="128" name="DALY_FAILURE_SOC_LOW_LVL2">
        <description>SOC low level 2 alarm.</description>
      </entry>
    </enum>

    <enum name="DALY_FAILURE_BYTE3_DIFFERENTIAL_FLAGS" bitmask="true">
      <description>Flags for Byte 3 of the Daly BMS failure status: Differential voltage/temperature failures. Bits 4-7 are reserved.</description>
      <entry value="1" name="DALY_FAILURE_DIFF_VOLT_LVL1">
        <description>Differential voltage level 1 alarm.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_DIFF_VOLT_LVL2">
        <description>Differential voltage level 2 alarm.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_DIFF_TEMP_LVL1">
        <description>Differential temperature level 1 alarm.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_DIFF_TEMP_LVL2">
        <description>Differential temperature level 2 alarm.</description>
      </entry>
      </enum>

    <enum name="DALY_FAILURE_BYTE4_MOSFET_SENSOR_FLAGS" bitmask="true">
      <description>Flags for Byte 4 of the Daly BMS failure status: MOSFET and related sensor failures.</description>
      <entry value="1" name="DALY_FAILURE_CHG_MOS_TEMP_HIGH_ALARM">
        <description>Charge MOS temperature high alarm.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_DISCHG_MOS_TEMP_HIGH_ALARM">
        <description>Discharge MOS temperature high alarm.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_CHG_MOS_TEMP_SENSOR_ERR">
        <description>Charge MOS temperature sensor error.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_DISCHG_MOS_TEMP_SENSOR_ERR">
        <description>Discharge MOS temperature sensor error.</description>
      </entry>
      <entry value="16" name="DALY_FAILURE_CHG_MOS_ADHESION_ERR">
        <description>Charge MOS adhesion error.</description>
      </entry>
      <entry value="32" name="DALY_FAILURE_DISCHG_MOS_ADHESION_ERR">
        <description>Discharge MOS adhesion error.</description>
      </entry>
      <entry value="64" name="DALY_FAILURE_CHG_MOS_OPEN_CIRCUIT_ERR">
        <description>Charge MOS open circuit error.</description>
      </entry>
      <entry value="128" name="DALY_FAILURE_DISCHG_MOS_OPEN_CIRCUIT_ERR">
        <description>Discharge MOS open circuit error (Corrected from 'Discrg' in PDF).</description>
      </entry>
    </enum>

    <enum name="DALY_FAILURE_BYTE5_SYSTEM_COMPONENT_FLAGS" bitmask="true">
      <description>Flags for Byte 5 of the Daly BMS failure status: System/Component failures.</description>
      <entry value="1" name="DALY_FAILURE_AFE_COLLECT_CHIP_ERR">
        <description>AFE collect chip error.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_VOLTAGE_COLLECT_DROPPED">
        <description>Voltage collect dropped.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_CELL_TEMP_SENSOR_ERR">
        <description>Cell temperature sensor error.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_EEPROM_ERR">
        <description>EEPROM error.</description>
      </entry>
      <entry value="16" name="DALY_FAILURE_RTC_ERR">
        <description>RTC error.</description>
      </entry>
      <entry value="32" name="DALY_FAILURE_PRECHARGE_FAILURE">
        <description>Precharge failure.</description>
      </entry>
      <entry value="64" name="DALY_FAILURE_COMMUNICATION_FAILURE">
        <description>Communication failure (external).</description>
      </entry>
      <entry value="128" name="DALY_FAILURE_INTERNAL_COMM_FAILURE">
        <description>Internal communication failure.</description>
      </entry>
    </enum>

    <enum name="DALY_FAILURE_BYTE6_OTHER_FAULTS_FLAGS" bitmask="true">
      <description>Flags for Byte 6 of the Daly BMS failure status: Other faults. Bits 4-7 are reserved.</description>
      <entry value="1" name="DALY_FAILURE_CURRENT_MODULE_FAULT">
        <description>Current module fault.</description>
      </entry>
      <entry value="2" name="DALY_FAILURE_SUM_VOLTAGE_DETECT_FAULT">
        <description>Sum voltage detect fault.</description>
      </entry>
      <entry value="4" name="DALY_FAILURE_SHORT_CIRCUIT_PROTECT_FAULT">
        <description>Short circuit protect fault.</description>
      </entry>
      <entry value="8" name="DALY_FAILURE_LOW_VOLT_FORBIDDEN_CHG_FAULT">
        <description>Low voltage forbidden charge fault.</description>
      </entry>
      </enum>

    <enum name="EZKONTROL_STATUS_GEAR">
      <description>ESC Gear status derived from bits 2-0 from message II, byte 3</description>
      <entry value="0" name="EZKONTROL_GEAR_NO">
        <description>Gear: NO (Neutral/No Gear)</description>
      </entry>
      <entry value="1" name="EZKONTROL_GEAR_R">
        <description>Gear: R (Reverse)</description>
      </entry>
      <entry value="2" name="EZKONTROL_GEAR_N">
        <description>Gear: N (Neutral)</description>
      </entry>
      <entry value="3" name="EZKONTROL_GEAR_D1">
        <description>Gear: D1 (Drive 1)</description>
      </entry>
      <entry value="4" name="EZKONTROL_GEAR_D2">
        <description>Gear: D2 (Drive 2)</description>
      </entry>
      <entry value="5" name="EZKONTROL_GEAR_D3">
        <description>Gear: D3 (Drive 3)</description>
      </entry>
      <entry value="6" name="EZKONTROL_GEAR_S">
        <description>Gear: S (Sport/Special)</description>
      </entry>
      <entry value="7" name="EZKONTROL_GEAR_P">
        <description>Gear: P (Park)</description>
      </entry>
    </enum>

    <enum name="EZKONTROL_STATUS_OPERATION_MODE">
      <description>ESC operation mode derived from bits 6-4 from message II, byte 3</description>
      <entry value="0" name="EZKONTROL_OP_MODE_STOP">
        <description>Operation Mode: Stop</description>
      </entry>
      <entry value="1" name="EZKONTROL_OP_MODE_DRIVE">
        <description>Operation Mode: Drive</description>
      </entry>
      <entry value="2" name="EZKONTROL_OP_MODE_CRUISE">
        <description>Operation Mode: Cruise</description>
      </entry>
      <entry value="3" name="EZKONTROL_OP_MODE_EBS">
        <description>Operation Mode: EBS (Electronic Braking System)</description>
      </entry>
      <entry value="4" name="EZKONTROL_OP_MODE_HOLD">
        <description>Operation Mode: Hold</description>
      </entry>
      </enum>

    <enum name="EZKONTROL_STATUS_BYTE3_FLAGS" bitmask="true">
      <description>Status flags from Byte 3 of EZkontrol MCU Message II (Brake, DC Contactor).</description>
      <entry value="8" name="EZKONTROL_STATUS_BRAKE_ACTIVE"> <description>Brake is active.</description>
      </entry>
      <entry value="128" name="EZKONTROL_STATUS_DC_CONTACTOR_ON"> <description>DC Contactor is ON.</description>
      </entry>
    </enum>

    <enum name="EZKONTROL_ERROR_BYTE4_FLAGS" bitmask="true">
      <description>Error flags from Byte 4 of EZkontrol MCU Message II.</description>
      <entry value="1" name="EZKONTROL_ERROR_OVERCURRENT"> <description>Error: Overcurrent.</description>
      </entry>
      <entry value="2" name="EZKONTROL_ERROR_OVERLOAD"> <description>Error: Overload.</description>
      </entry>
      <entry value="4" name="EZKONTROL_ERROR_OVERVOLTAGE"> <description>Error: Overvoltage.</description>
      </entry>
      <entry value="8" name="EZKONTROL_ERROR_UNDERVOLTAGE"> <description>Error: Undervoltage.</description>
      </entry>
      <entry value="16" name="EZKONTROL_ERROR_CONTROLLER_OVERHEAT"> <description>Error: Controller Overheat.</description>
      </entry>
      <entry value="32" name="EZKONTROL_ERROR_MOTOR_OVERHEAT"> <description>Error: Motor Overheat.</description>
      </entry>
      <entry value="64" name="EZKONTROL_ERROR_MOTOR_STALLED"> <description>Error: Motor Stalled.</description>
      </entry>
      <entry value="128" name="EZKONTROL_ERROR_MOTOR_OUT_OF_PHASE"> <description>Error: Motor Out of phase.</description>
      </entry>
    </enum>

    <enum name="EZKONTROL_ERROR_BYTE5_FLAGS" bitmask="true">
      <description>Error flags from Byte 5 of EZkontrol MCU Message II.</description>
      <entry value="1" name="EZKONTROL_ERROR_MOTOR_SENSOR"> <description>Error: Motor Sensor.</description>
      </entry>
      <entry value="2" name="EZKONTROL_ERROR_MOTOR_AUX_SENSOR"> <description>Error: Motor AUX Sensor.</description>
      </entry>
      <entry value="4" name="EZKONTROL_ERROR_ENCODER_MISALIGNED"> <description>Error: Encoder Misaligned.</description>
      </entry>
      <entry value="8" name="EZKONTROL_ERROR_ANTI_RUNAWAY_ENGAGED"> <description>Error: Anti-Runaway Engaged.</description>
      </entry>
      <entry value="16" name="EZKONTROL_ERROR_MAIN_ACCELERATOR"> <description>Error: Main Accelerator.</description>
      </entry>
      <entry value="32" name="EZKONTROL_ERROR_AUX_ACCELERATOR"> <description>Error: AUX Accelerator.</description>
      </entry>
      <entry value="64" name="EZKONTROL_ERROR_PRE_CHARGE"> <description>Error: Pre-charge.</description>
      </entry>
      <entry value="128" name="EZKONTROL_ERROR_DC_CONTACTOR_FAULT"> <description>Error: DC Contactor fault (distinct from status).</description>
      </entry>
    </enum>

    <enum name="EZKONTROL_ERROR_BYTE6_FLAGS" bitmask="true">
      <description>Error flags from Byte 6 of EZkontrol MCU Message II.</description>
      <entry value="1" name="EZKONTROL_ERROR_POWER_VALVE"> <description>Error: Power valve.</description>
      </entry>
      <entry value="2" name="EZKONTROL_ERROR_CURRENT_SENSOR"> <description>Error: Current Sensor.</description>
      </entry>
      <entry value="4" name="EZKONTROL_ERROR_AUTO_TUNE"> <description>Error: Auto-tune.</description>
      </entry>
      <entry value="8" name="EZKONTROL_ERROR_RS485"> <description>Error: RS485 communication.</description>
      </entry>
      <entry value="16" name="EZKONTROL_ERROR_CAN_COMM"> <description>Error: CAN communication.</description>
      </entry>
      <entry value="32" name="EZKONTROL_ERROR_SOFTWARE"> <description>Error: Software.</description>
      </entry>
      </enum>
  </enums>

  <messages>

    <message id="0" name="HEARTBEAT">
      <description>The heartbeat message shows that a system or component is present and responding. The type and autopilot fields (along with the message component id), allow the receiving system to treat further messages from this system appropriately (e.g. by laying out the user interface based on the autopilot). This microservice is documented at https://mavlink.io/en/services/heartbeat.html</description>
      <field type="uint8_t" name="type" enum="MAV_TYPE">Vehicle or component type. For a flight controller component the vehicle type (quadrotor, helicopter, etc.). For other components the component type (e.g. camera, gimbal, etc.). This should be used in preference to component id for identifying the component type.</field>
      <field type="uint8_t" name="autopilot" enum="MAV_AUTOPILOT">Autopilot type / class. Use MAV_AUTOPILOT_INVALID for components that are not flight controllers.</field>
      <field type="uint8_t" name="base_mode" enum="MAV_MODE_FLAG" display="bitmask">System mode bitmap.</field>
      <field type="uint32_t" name="custom_mode">A bitfield for use for autopilot-specific flags</field>
      <field type="uint8_t" name="system_status" enum="MAV_STATE">System status flag.</field>
      <field type="uint8_t_mavlink_version" name="mavlink_version">MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version</field>
    </message>
  
    <message id="1" name="INSTRUMENTATION">
      <description>Instrumentation PCBs</description>
      <field type="int16_t" name="battery_current" units ="cA"></field>
      <field type="int16_t" name="motor_current_left" units="cA"></field>
      <field type="int16_t" name="motor_current_right" units ="cA"></field>
      <field type="int16_t" name="mppt_current" units ="cA"></field>
      <field type="int16_t" name="auxiliary_battery_current" units ="cA"></field>
      <field type="uint16_t" name="battery_voltage" units ="cV"></field>
      <field type="uint16_t" name="auxiliary_battery_voltage" units ="cV"></field>
      <field type="uint16_t" name="irradiance" units ="W/m^2"></field>
      <field type="uint64_t" name="timestamp">Timestamp.</field> 
    </message>

    <message id="2" name ="TEMPERATURES">
      <description> Temperature data for motor and MPPT.</description>
      <field type="int16_t" name="temperature_battery_left" units="cdegC">Left side of battery pack</field>
      <field type="int16_t" name="temperature_battery_right" units ="cdegC">Right side of battery pack</field>
      <field type="int16_t" name="temperature_mppt_left" units ="cdegC">MPPT temperature on its left side.</field>
      <field type="int16_t" name="temperature_mppt_right" units ="cdegC">MPPT temperature on its left side.</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>
  
    <message id="3" name="GPS">
      <description></description>
      <field type="int32_t" name="latitude" units="degE7"></field>
      <field type="int32_t" name="longitude" units="degE7"></field>
      <field type="uint16_t" name="speed" units="cm/s"></field>
      <field type="uint16_t" name="course" units="deg">Direction of movement(not heading)</field>
      <field type="uint8_t" name="satellites_visible"></field>
      <field type="uint8_t" name="hdop">Horizontal dilution of precision. Represents quality of GPS constellation. Values close to 1 are best. Above 5 is poor</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <message id="4" name="MPPT">
      <description>MPPT data fields</description>
      <field type="int16_t" name="pv_voltage" units ="cV">Solar array voltage,ID=3100</field>
      <field type="int16_t" name="pv_current" units ="cV">Solar array current,ID=3101</field>
      <field type="int16_t" name="battery_current" units ="cA">Net battery current(positive=charging),ID=331B</field>
      <field type="int16_t" name="battery_voltage" units ="cV">Battery voltage,ID=3104</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <message id="5" name="MPPT_STATE">
      <description>MPPT error codes</description>
      <field type="uint16_t" name="battery_status" enum="MPPT_STATUS">Status of the battery,ID=3200.</field>
      <field type="uint16_t" name="charging_equipment_status" enum="MPPT_STATUS">Status of the MPPT,ID=3201.</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <message id="6" name="BMS">
      <description>Battery information.</description>
      <field type="uint16_t[16]" name="voltages" units="mV">Voltage of each cell.</field>
      <field type="int16_t[2]" name="temperatures" units="cdegC">Temperature of the battery</field>
      <field type="int16_t" name="current_battery" units="dA">Battery current</field>
      <field type="int8_t" name="state_of_charge" units="%">Remaining battery energy. Values: [0-100]</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <message id="7" name="BMS_STATUS">
      <description>
        Daly BMS battery failure status (corresponds to original message 0x98).
        Contains multiple bytes of failure flags and a final fault code.
        Also includes temperatures and status bitfield of the battery management system (FET states, stationary, charging or discharging)
      </description>
      <field type="temperatures[2]" name="temperatures" units="cdegC">Temperature of the battery</field>
      <field type="uint8_t" name="status" enum="BMS_CHARGE_DISCHARGE_STATUS_FLAGS">Charge/Discharge FET status and current charging status</field>
      <field type="uint8_t" name="failure_flags_byte0" enum="DALY_FAILURE_BYTE0_VOLTAGE_FLAGS">Failure flags: Voltage related (Byte 0).</field>
      <field type="uint8_t" name="failure_flags_byte1" enum="DALY_FAILURE_BYTE1_TEMP_FLAGS">Failure flags: Temperature related (Byte 1).</field>
      <field type="uint8_t" name="failure_flags_byte2" enum="DALY_FAILURE_BYTE2_CURRENT_SOC_FLAGS">Failure flags: Current and SOC related (Byte 2).</field>
      <field type="uint8_t" name="failure_flags_byte3" enum="DALY_FAILURE_BYTE3_DIFFERENTIAL_FLAGS">Failure flags: Differential V/T related (Byte 3).</field>
      <field type="uint8_t" name="failure_flags_byte4" enum="DALY_FAILURE_BYTE4_MOSFET_SENSOR_FLAGS">Failure flags: MOSFET and sensor related (Byte 4).</field>
      <field type="uint8_t" name="failure_flags_byte5" enum="DALY_FAILURE_BYTE5_SYSTEM_COMPONENT_FLAGS">Failure flags: System/Component related (Byte 5).</field>
      <field type="uint8_t" name="failure_flags_byte6" enum="DALY_FAILURE_BYTE6_OTHER_FAULTS_FLAGS">Failure flags: Other faults (Byte 6).</field>
      <field type="uint8_t" name="fault_code_byte7">Raw fault code (Byte 7 from original message).</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <!-- 
      Accelerator Opening is intentionally sent here with a higher frequency
    -->
    <message id="8" name="EZKONTROL_MCU_METER_DATA_I">
      <description>
      Electrical data from EZkontrol ESC based on CAN Message I, including accelerator opening for higher frequency publishing.
      Phase current is excluded because it updates too rapidly for low bandwidth links
      </description>
      <field type="uint16_t" name="bus_voltage" unit="dV">0.1V/bit, offset= 0</field>
      <field type="int16_t" name="bus_current" unit="dA">0.1A/bit, offset= -32000</field>
      <field type="int16_t" name="rpm" unit="drpm/bit">0.1rpm/bit, offset= -32000</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>

    <!-- 
      Accelerator Opening (Byte 2) is intentionally omitted to be sent with a higher frequency on another message
    -->
    <message id="9" name="EZKONTROL_MCU_METER_DATA_II">
      <description>Status data from EZkontrol ESC based on CAN Message II, excluding accelerator opening. Temperatures have an offset of -40 degrees Celsius.</description>
      <field type="int8_t" name="controller_temperature">Controller temperature. Actual value = MAVLink value - 40. Unit: degC</field>
      <field type="int8_t" name="motor_temperature">Motor temperature. Actual value = MAVLink value - 40. Unit: degC</field>
      <field type="uint8_t" name="status">Gear, brake, operation mode and DC contactor.</field>
      <field type="uint8_t" name="error_flags_byte4" enum="EZKONTROL_ERROR_BYTE4_FLAGS">Error flags from Byte 4.</field>
      <field type="uint8_t" name="error_flags_byte5" enum="EZKONTROL_ERROR_BYTE5_FLAGS">Error flags from Byte 5.</field>
      <field type="uint8_t" name="error_flags_byte6" enum="EZKONTROL_ERROR_BYTE6_FLAGS">Error flags from Byte 6.</field>
      <field type="uint8_t" name="life_signal">Life signal counter derived from bits 7-4 from byte 7, msg II.</field>
      <field type="uint64_t" name="timestamp">Timestamp.</field>
    </message>


  </messages>


</mavlink>
